%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% RELEASE NOTES
% 
% List of outstanding issues in Graph Analysis Bencyhmark.
%                           
% REVISION
% 22-Feb-09   1.0 Release   MIT Lincoln Laboratory.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Graph Analysis Benchmark (GAB) 

This benchmark uses a linear algebra representation for methods to generate 
power-law graphs, and kernels for graph traversal and identification of 
critical nodes.

Its graph generator is based on the Recursive MATrix (R-MAT) power-law 
graph generation algorithm (Chakrabati, Zhan & Faloutsos). This model 
recursively sub-divides the graph into four equal-sized partitions and 
distributes edges within these partitions with unequal probabilities. 

Its Kernel 4 computes the betweenness centrality for an unweighted graph, 
using only matrix operations.  Betweenness centrality is a measure of the 
importance of a vertex with respect to the shortest paths between other 
vertices in the graph that it lies on. This algorithm is based on the work 
of Ulrik Brandes. We express his algorithm using linear algebra notation.  
The GAB algorithm has only O(|V||E|) time complexity, and O(|V|+|E|) space 
complexity, and it is (at worse) O(mn) in time, and O(m) space.

NOTES

- The Written Specification accompanying this release v1.0 of the Graph 
  Analysis Benchmark is "GraphAnalysisBenchmark_v1.0.pdf". Any future 
  updates to the Written Specification will be available at 
  www.graphanalysis.org.

- Kernel 1 is allowed to modify the SDG's RMAT data before using it to form 
  the graph, to be able to delete the (few) parallel edges that may exist. 
  It was considered too difficult to require that these multiple edges be 
  removed in a 'parallelized' SDG's RMAT implementation.

- This code runs significantly faster when ENABLE_VERIF is turned-off in
  'getUserParameters.m'.  With verification turned-off we were able to test
  with much higher values of SCALE.

- In addition to RMAT data generation, the GAB can generate deterministic 
  data as follows (see getUserParameters.m):
  Verifyable: HALF_TORUS_1D, TORUS_1D, and TORUS_2D
  Otherwise:  TORUS_3D, TORUS_4D 
  
- By setting 'batchSize' the user is able to group a number of vertices 
  to be processed at one time by Kernel 4 (it enables vectorized processing 
  of the betweeness centrality kernel).


KNOWN ISSUES

- The OCTAVE support does not include plotting, hence some parts of 
  verification are dissabled.





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright © 2009, Massachusetts Institute of Technology
% All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are  
% met:
%    * Redistributions of source code must retain the above copyright
%      notice, this list of conditions and the following disclaimer.
%    * Redistributions in binary form must reproduce the above copyright
%      notice, this list of conditions and the following disclaimer in the
%      documentation and/or other materials provided with the distribution.
%    * Neither the name of the Massachusetts Institute of Technology nor  
%      the names of its contributors may be used to endorse or promote 
%      products derived from this software without specific prior written 
%      permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS 
% IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
% THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
% PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
% CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
% EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
% PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
% LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
% NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS   
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

