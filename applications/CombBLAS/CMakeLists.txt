INCLUDE(CheckIncludeFileCXX)

cmake_minimum_required(VERSION 2.0)
PROJECT( COMBINATORIAL_BLAS )
SET(CMAKE_CXX_COMPILER mpicxx)
SET(CMAKE_C_COMPILER mpicc) 
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_VERBOSE_MAKEFILE ON)

INCLUDE(TestCXXAcceptsFlag.cmake)
CHECK_CXX_ACCEPTS_FLAG(-std=c++11 C11)

FIND_PACKAGE(Boost)
MESSAGE(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

if (NOT C11)
	CHECK_INCLUDE_FILE_CXX(tr1/tuple HAVE_TR1)
	if (NOT HAVE_TR1)
		FIND_PACKAGE(Boost)
		MESSAGE(${Boost_INCLUDE_DIR})
		#FIND_PATH(Boost_INCLUDE_DIR
		#		NAMES boost/config.hpp
		#		PATH_SUFFIXES boost-1_33 boost-1_34 boost-1_35
		#		boost-1_36 boost-1_37 boost-1_38 boost-1_39 boost-1_40)	
		SET(CMAKE_CXX_FLAGS "-I${Boost_INCLUDE_DIR} -DNDEBUG -O2 -DCOMBBLAS_BOOST -DMPICH_IGNORE_CXX_SEEK")

		IF (NOT Boost_INCLUDE_DIR)
			SET(BOOST_ROOT $ENV{TACC_BOOST_INC})
			MESSAGE("Searching under ${BOOST_ROOT}")
			FIND_PACKAGE(Boost)
       	 		MESSAGE(${Boost_INCLUDE_DIR})
		ENDIF (NOT Boost_INCLUDE_DIR)

		SET(CMAKE_CXX_FLAGS "-I${Boost_INCLUDE_DIR} -DNDEBUG -O2 -DCOMBBLAS_BOOST -DMPICH_IGNORE_CXX_SEEK")

		IF (NOT Boost_INCLUDE_DIR)
        		MESSAGE(FATAL_ERROR "Cannot find boost or compliant libstdc++")
		ENDIF (NOT Boost_INCLUDE_DIR)
	else (NOT HAVE_TR1)
		SET(CMAKE_CXX_FLAGS "-DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK -DCOMBBLAS_TR1")
		SET(CMAKE_C_FLAGS "-DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK -DCOMBBLAS_TR1")
	endif (NOT HAVE_TR1)
else (NOT C11)
	if (CMAKE_COMPILER_IS_GNUCXX)
		SET(CMAKE_CXX_FLAGS "-std=c++11 -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
		SET(CMAKE_C_FLAGS "-DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
	else (CMAKE_COMPILER_IS_GNUCXX)
		CHECK_CXX_ACCEPTS_FLAG(-std=c++0x C0X)
		if (C0X) 
			SET(CMAKE_CXX_FLAGS "-std=c++11 -std=c++0x -DNOTGNU -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
			SET(CMAKE_C_FLAGS "-DNOTGNU -DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
		else (C0X)
			SET(CMAKE_CXX_FLAGS "-std=c++11 -DNOTGNU -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
			SET(CMAKE_C_FLAGS "-DNOTGNU -DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
		endif (C0X)
	endif (CMAKE_COMPILER_IS_GNUCXX)
endif (NOT C11)

ADD_LIBRARY( CommGridlib CommGrid.cpp  )
ADD_LIBRARY( MPITypelib MPIType.cpp )
ADD_LIBRARY( MemoryPoollib MemoryPool.cpp )

ADD_SUBDIRECTORY( ReleaseTests )
ADD_SUBDIRECTORY( Applications ) 
ADD_SUBDIRECTORY( graph500-1.2/generator )

ENABLE_TESTING()
INCLUDE(CTest)
ADD_TEST( Multiplication_Test mpirun -n 4 ReleaseTests/MultTest TESTDATA/rmat_scale16_A.txt TESTDATA/rmat_scale16_B.txt TESTDATA/rmat_scale16_productAB.txt TESTDATA/x_65536_halfdense.txt TESTDATA/y_65536_halfdense.txt)
ADD_TEST( Reduction_Test mpirun -n 4 ReleaseTests/ReduceTest TESTDATA/sprand10000 TESTDATA/sprand10000_sumcols TESTDATA/sprand10000_sumrows)
ADD_TEST( Iterator_Test mpirun -n 4 ReleaseTests/IteratorTest TESTDATA sprand10000)
ADD_TEST( Transpose_Test mpirun -n 4 ReleaseTests/TransposeTest TESTDATA betwinput_scale16 betwinput_transposed_scale16)
ADD_TEST( Indexing_Test mpirun -n 4 ReleaseTests/IndexingTest TESTDATA B_100x100.txt B_10x30_Indexed.txt rand10outta100.txt rand30outta100.txt)
ADD_TEST( SpAsgn_Test mpirun -n 4 ReleaseTests/SpAsgnTest TESTDATA A_100x100.txt A_with20x30hole.txt dense_20x30matrix.txt A_wdenseblocks.txt 20outta100.txt 30outta100.txt)
ADD_TEST( GalerkinNew_Test mpirun -n 4 ReleaseTests/GalerkinNew TESTDATA/grid3d_k5.txt TESTDATA/offdiag_grid3d_k5.txt TESTDATA/diag_grid3d_k5.txt TESTDATA/restrict_T_grid3d_k5.txt)
ADD_TEST( FindSparse_Test mpirun -n 4 ReleaseTests/FindSparse TESTDATA findmatrix.txt)
ADD_TEST( BetwCent_Test mpirun -n 4 Applications/betwcent TESTDATA/SCALE16BTW-TRANSBOOL/ 10 64 )
ADD_TEST( G500_Test mpirun -n 4 Applications/graph500 Force 20 )
ADD_TEST ( FBFS_Test mpirun -n 4 Applications/fbfs Gen 17 )
ADD_TEST ( FMIS_Test mpirun -n 4 Applications/fmis 18 )
